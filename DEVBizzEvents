# Set variables

subscription=development
subscriptionId="$(az account show --query id -o tsv)"
location=westeurope
resourcegroup=development-dev-rg
topicname=connect-dev
crsendpoint=https://development.smarthotel.nl/connect/bizzcrs
payendpoint=https://development.smarthotel.nl/connect/bizzpay
postendpoint=https://development.smarthotel.nl/connect/post
dataendpoint=https://development.smarthotel.nl/connect/data/log
getendpoint=https://development.smarthotel.nl/connect/get

#Set active subscription
az account set --subscription $subscription

# Delete existing eventgrid topic
echo "Delete topic $topicname"
az eventgrid topic delete -g $resourcegroup --name $topicname

# Create eventgrid topic
echo "Create topic $topicname"
az eventgrid topic create --name $topicname -l $location -g $resourcegroup --output none

# Create system event subscriptions
echo "Create system event subscriptions in $topicname"
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name SysPurgeLog \
  --endpoint $dataendpoint \
  --included-event-types "$resourcegroup.PurgeLog.Requested"

# Create Get event subscriptions
echo "Create Get event subscriptions in $topicname"

if [ $topicname = 'louvre' ]; then
  az eventgrid event-subscription create \
    --output none \
    --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
    --name GetResult \
    --endpoint $getendpoint \
    --included-event-types "$resourcegroup.Result.Required"
fi

if [ $topicname = 'pms' ]; then
  az eventgrid event-subscription create \
    --output none \
    --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
    --name GetPMSReservation \
    --endpoint $getendpoint \
    --included-event-types "$resourcegroup.PMSReservation.Required"

  az eventgrid event-subscription create \
    --output none \
    --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
    --name GetInventory \
    --endpoint $getendpoint \
    --included-event-types "$resourcegroup.Inventory.Required"
    
  az eventgrid event-subscription create \
    --output none \
    --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
    --name GetRates \
    --endpoint $getendpoint \
    --included-event-types "$resourcegroup.Rates.Required"
fi

# Create CRS event subscriptions
echo "Create CRS event subscriptions in $topicname"
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name CrsBizzBusinessPrepared \
  --endpoint $crsendpoint \
  --included-event-types "$resourcegroup.Business.Prepared"
  
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name CrsBizzRefreshPrepared \
  --endpoint $crsendpoint \
  --included-event-types "$resourcegroup.Refresh.Prepared"

# Create CRS Post event subscriptions
echo "Create CRS Post event subscriptions in $topicname"
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name CrsPostProxyProcessed \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Proxy.Processed"
    
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name CrsPostBusinessProcessed \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Business.Processed"
    
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name CrsPostReservationProcessed \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Reservation.Processed"
      
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name CrsPostReservationCommit \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Commit.Requested"
        
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name CrsPostReservationPush \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Push.Requested"

az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name CrsPostResultRequested \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Result.Requested"

if [ $topicname = 'pms' ]; then
  az eventgrid event-subscription create \
    --output none \
    --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
    --name CrsGuestRegistrationRequested \
    --endpoint $postendpoint \
    --included-event-types "$resourcegroup.Registration.Requested"
fi

# Create Payment prepared event subscriptions
echo "Create Payment prepared event subscriptions in $topicname"
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzPaymentPrepared \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Payment.Prepared"
  
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzPaylinkPrepared \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Paylink.Prepared"
  
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzNotificationPrepared \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Notification.Prepared"
  
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzChargePrepared \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Charge.Prepared"
  
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzAutoChargePrepared \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.AutoCharge.Prepared"
    
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzCapturePrepared \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Capture.Prepared"
      
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzReportPrepared \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Report.Prepared"
      
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzCheckoutPrepared \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Checkout.Prepared"

# Create Payment processed event subscriptions
echo "Create Payment processed event subscriptions in $topicname"
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzTokenProcessed \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Token.Processed"

az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzChargeProcessed \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Charge.Processed"
  
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzCaptureProcessed \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Capture.Processed"
    
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzStatusProcessed \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Status.Processed"
    
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzReminderProcessed \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Reminder.Processed"
    
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayBizzNotificationProcessed \
  --endpoint $payendpoint \
  --included-event-types "$resourcegroup.Notification.Processed"

# Create Payment Post event subscriptions
echo "Create Payment Post event subscriptions in $topicname"
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayPostPaymentRequested \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Payment.Requested"

az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayPostChargeRequested \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Charge.Requested"
  
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayPostCaptureRequested \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Capture.Requested"

az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayPostStatusRequested \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Status.Requested"

az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayPostNotificationRequested \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Notification.Requested"

az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayPostReminderRequested \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Reminder.Requested"

az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayPostPaymentStatusRequested \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Paymentstatus.Requested"

az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayPostDepositRequested \
  --endpoint $postendpoint \
  --included-event-types "$resourcegroup.Deposit.Requested"

# Create Paymnt Get event subscriptions
echo "Create Payment Get event subscriptions in $topicname"
az eventgrid event-subscription create \
  --output none \
  --source-resource-id "/subscriptions/$subscriptionId/resourceGroups/$resourcegroup/providers/Microsoft.EventGrid/topics/$topicname" \
  --name PayGetReportRequired \
  --endpoint $getendpoint \
  --included-event-types "$resourcegroup.Report.Required"
